## typesense image version
## ref: https://hub.docker.com/r/typesense/typesense/
##
image:
  registry: docker.io
  repository: typesense/typesense
  tag: 0.13.0
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

## String to partially override typesense.fullname template (will maintain the release name)
##
# nameOverride:

## String to fully override typesense.fullname template
##
# fullnameOverride:

## Specify the number of replicas for the application
##
replicas: 1

## Specify the port where your application will be running
##
applicationPort: 8108

## Define custom environment variables to pass to the image here
##
extraEnv:
  - name: TYPESENSE_API_KEY
    value: "wVW2QpmOvCAob5YkGyRfjSgwAXftoAwUhfqi4Ukq63s="
  - name: TYPESENSE_DATA_DIR
    value: "/data"
  - name: TYPESENSE_CORS_ORIGINS
    value: "*"  # Or specify your dashboard domain
  - name: TYPESENSE_CORS_METHODS
    value: "GET,POST,PUT,DELETE"
  - name: TYPESENSE_CORS_HEADERS
    value: "Content-Type,X-TYPESENSE-API-KEY"
  - name: TYPESENSE_CORS_MAX_AGE
    value: "86400"
  - name: TYPESENSE_CORS_CREDENTIALS
    value: "true"    

## Define a reference to a config map or a secret to pass into the pod as environment vars
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/
envFrom: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-typesense/#affinity-and-anti-affinity
##
affinity: {}

## typesense labels for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/user-guide/typesense-selection/
##
nodeSelector: {}

## Tolerations for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: {}

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001

## typesense conatiners' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits: {}
  #   cpu: 100m
  #   memory: 128Mi
  requests: {}
  #   cpu: 100m
  #   memory: 128Mi

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  path: /data
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  storageClass: gp2
  accessMode: ReadWriteOnce
  size: 50Gi

## Service paramaters
##
service:
  type: ClusterIP
  port: 8000
  ## Specify the nodePort value for the LoadBalancer and nodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodePort
  ##
  # nodePort:
  ## Set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  # loadBalancerIP:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}

## Ingress paramaters
##
ingress:
  ## Set to true to enable ingress record generation
  ##
  enabled: true

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
    - name: search.drivex.dev

      ## Set pathType for this host
      pathType: Prefix

      ## Set this to true in order to enable TLS on the ingress record
      ##
      tls: true

      ## Set this to true in order to add the corresponding annotations for cert-manager
      ##
      certManager: true

      ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
      ##
      tlsSecret: typesense-dev-tls

      ## Ingress annotations done as key:value pairs
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
      ##
      ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
      annotations:
       cert-manager.io/cluster-issuer: letsencrypt-dev
       app.kubernetes.io/name: typesense-dev
       kubernetes.io/ingress.class: "nginx"
       # kubernetes.io/ingress.class: alb
       nginx.ingress.kubernetes.io/ssl-redirect: "true"
       # Enable if you need HTTP/2 support (especially helpful for gRPC)
       nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
       # nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
       # Add if you need larger request bodies
       nginx.ingress.kubernetes.io/proxy-body-size: "50m"
       # Consider adding the following for security
       nginx.ingress.kubernetes.io/enable-cors: "true"
       nginx.ingress.kubernetes.io/cors-allow-origin: "https://ts-dashboard.drivex.dev"
       nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
       nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
       nginx.ingress.kubernetes.io/proxy-read-timeout: "300"

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: typesense.local-tls
  #   key:
  #   certificate:

